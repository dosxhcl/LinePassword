var CHANNEL_ACCESS_TOKEN = '/*TOKEN from LINE*/';
var replyUrl = 'https://api.line.me/v2/bot/message/reply';
var messageCache = CacheService.getPublicCache();

/**
 *  Post Function as web app for LINE to call
 *  
 *  @param  e    event received contain reply token
 *
 *  @retvl  None
 */
function doPost(e) 
{
  var msg = JSON.parse(e.postData.contents);

  var replyToken = msg.events[0].replyToken;
  var msgType    = msg.events[0].type;
  var userID     = msg.events[0].source.userId;
  
  if(typeof replyToken === 'undefined') 
      return;

  if(msgType == 'message')
  {
    var userMessage = msg.events[0].message.text;
    var status = processMessage(userMessage);
    var theReplyMsg = messageCache.get('replyMsg');
    if(theReplyMsg != null)
    {
      messageCache.remove('replyMsg');
    }
  }
}

/**
 *  Function to reply the message in JSON format
 *  
 *  @param  e              event received contain reply token
 *  @param  replayMessage  string to reply
 *
 *  @retvl  None
 */
function replyGeneral(e, msgContain)
{
  var jsonMessage;
  var replyData;
  
  jsonMessage = 
  {
    'replyToken': e.events[0].replyToken,
    'messages': [JSON.parse(msgContain)]
  };
  
  replyData = 
  {
    'headers': 
    {
      'Content-Type': 'application/json; charset=UTF-8',
      'Authorization': 'Bearer ' + CHANNEL_ACCESS_TOKEN,
    },
    'method': 'post',
    'payload': JSON.stringify(jsonMessage)
  };
  
  UrlFetchApp.fetch(replyUrl,replyData);
}

/**
 *  Function to reply the message in text format
 *  
 *  @param  e              event received contain reply token
 *  @param  replayMessage  string to reply
 *
 *  @retvl  None
 */
function replyText(e, replayMessage)
{
  var jsonMessage;
  var replyData;
  
  jsonMessage = 
  {
    'type': 'text',
    'text': replayMessage,
  };
  
  replyGeneral(e, JSON.stringify(jsonMessage));
}

function prepareListMessage(accountsInfo)
{
}
